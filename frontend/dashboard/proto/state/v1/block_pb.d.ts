//
//Block Proto
//閉塞の状態を扱うプロトコル

// @generated by protoc-gen-es v1.4.2 with parameter "target=dts+js"
// @generated from file state/v1/block.proto (package state.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum state.v1.BlockStateEnum
 */
export declare enum BlockStateEnum {
  /**
   * @generated from enum value: BLOCK_STATE_UNKNOWN = 0;
   */
  BLOCK_STATE_UNKNOWN = 0,

  /**
   * 閉塞が開の状態(列車がいない)
   *
   * @generated from enum value: BLOCK_STATE_OPEN = 1;
   */
  BLOCK_STATE_OPEN = 1,

  /**
   * 閉塞が閉の状態(列車がいない)
   *
   * @generated from enum value: BLOCK_STATE_CLOSE = 2;
   */
  BLOCK_STATE_CLOSE = 2,
}

/**
 * 閉塞の状態
 *
 * @generated from message state.v1.BlockState
 */
export declare class BlockState extends Message<BlockState> {
  /**
   * 閉塞のID
   *
   * @generated from field: string block_id = 1;
   */
  blockId: string;

  /**
   * 閉塞の状態
   *
   * @generated from field: state.v1.BlockStateEnum state = 2;
   */
  state: BlockStateEnum;

  constructor(data?: PartialMessage<BlockState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.BlockState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockState;

  static equals(a: BlockState | PlainMessage<BlockState> | undefined, b: BlockState | PlainMessage<BlockState> | undefined): boolean;
}

/**
 *
 * GetBlockStates : 閉塞の状態を取得するAPI
 *
 * @generated from message state.v1.GetBlockStatesRequest
 */
export declare class GetBlockStatesRequest extends Message<GetBlockStatesRequest> {
  constructor(data?: PartialMessage<GetBlockStatesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.GetBlockStatesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBlockStatesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBlockStatesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBlockStatesRequest;

  static equals(a: GetBlockStatesRequest | PlainMessage<GetBlockStatesRequest> | undefined, b: GetBlockStatesRequest | PlainMessage<GetBlockStatesRequest> | undefined): boolean;
}

/**
 * @generated from message state.v1.GetBlockStatesResponse
 */
export declare class GetBlockStatesResponse extends Message<GetBlockStatesResponse> {
  /**
   * @generated from field: repeated state.v1.BlockState states = 1;
   */
  states: BlockState[];

  constructor(data?: PartialMessage<GetBlockStatesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.GetBlockStatesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBlockStatesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBlockStatesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBlockStatesResponse;

  static equals(a: GetBlockStatesResponse | PlainMessage<GetBlockStatesResponse> | undefined, b: GetBlockStatesResponse | PlainMessage<GetBlockStatesResponse> | undefined): boolean;
}

/**
 *
 * UpdateBLockState: 閉塞の状態を更新するAPI
 *
 * @generated from message state.v1.UpdateBlockStateRequest
 */
export declare class UpdateBlockStateRequest extends Message<UpdateBlockStateRequest> {
  /**
   * @generated from field: state.v1.BlockState state = 1;
   */
  state?: BlockState;

  constructor(data?: PartialMessage<UpdateBlockStateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.UpdateBlockStateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBlockStateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBlockStateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBlockStateRequest;

  static equals(a: UpdateBlockStateRequest | PlainMessage<UpdateBlockStateRequest> | undefined, b: UpdateBlockStateRequest | PlainMessage<UpdateBlockStateRequest> | undefined): boolean;
}

/**
 * @generated from message state.v1.UpdateBlockStateResponse
 */
export declare class UpdateBlockStateResponse extends Message<UpdateBlockStateResponse> {
  constructor(data?: PartialMessage<UpdateBlockStateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.UpdateBlockStateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBlockStateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBlockStateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBlockStateResponse;

  static equals(a: UpdateBlockStateResponse | PlainMessage<UpdateBlockStateResponse> | undefined, b: UpdateBlockStateResponse | PlainMessage<UpdateBlockStateResponse> | undefined): boolean;
}

