//
//Point Proto
//ポイントレールの状態を扱うプロトコル

// @generated by protoc-gen-es v1.4.2 with parameter "target=dts+js"
// @generated from file state/v1/point.proto (package state.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum state.v1.PointStateEnum
 */
export declare enum PointStateEnum {
  /**
   * @generated from enum value: POINT_STATE_UNKNOWN = 0;
   */
  POINT_STATE_UNKNOWN = 0,

  /**
   * ポイントがまっすぐな状態
   *
   * @generated from enum value: POINT_STATE_NORMAL = 1;
   */
  POINT_STATE_NORMAL = 1,

  /**
   * ポイントが移動している状態
   *
   * @generated from enum value: POINT_STATE_REVERSE = 2;
   */
  POINT_STATE_REVERSE = 2,
}

/**
 * @generated from message state.v1.PointAndState
 */
export declare class PointAndState extends Message<PointAndState> {
  /**
   * ポイントのid
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ポイントの状態
   *
   * @generated from field: state.v1.PointStateEnum state = 2;
   */
  state: PointStateEnum;

  constructor(data?: PartialMessage<PointAndState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.PointAndState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PointAndState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PointAndState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PointAndState;

  static equals(a: PointAndState | PlainMessage<PointAndState> | undefined, b: PointAndState | PlainMessage<PointAndState> | undefined): boolean;
}

/**
 *
 * UpdatePointState : ポイントの状態を更新するAPI
 *
 * @generated from message state.v1.UpdatePointStateRequest
 */
export declare class UpdatePointStateRequest extends Message<UpdatePointStateRequest> {
  /**
   * @generated from field: state.v1.PointAndState state = 1;
   */
  state?: PointAndState;

  constructor(data?: PartialMessage<UpdatePointStateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.UpdatePointStateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePointStateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePointStateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePointStateRequest;

  static equals(a: UpdatePointStateRequest | PlainMessage<UpdatePointStateRequest> | undefined, b: UpdatePointStateRequest | PlainMessage<UpdatePointStateRequest> | undefined): boolean;
}

/**
 * @generated from message state.v1.UpdatePointStateResponse
 */
export declare class UpdatePointStateResponse extends Message<UpdatePointStateResponse> {
  constructor(data?: PartialMessage<UpdatePointStateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.UpdatePointStateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePointStateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePointStateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePointStateResponse;

  static equals(a: UpdatePointStateResponse | PlainMessage<UpdatePointStateResponse> | undefined, b: UpdatePointStateResponse | PlainMessage<UpdatePointStateResponse> | undefined): boolean;
}

/**
 *
 * GetPointStates : 全てのポイントの状態を取得するAPI
 *
 * @generated from message state.v1.GetPointStatesRequest
 */
export declare class GetPointStatesRequest extends Message<GetPointStatesRequest> {
  constructor(data?: PartialMessage<GetPointStatesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.GetPointStatesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPointStatesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPointStatesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPointStatesRequest;

  static equals(a: GetPointStatesRequest | PlainMessage<GetPointStatesRequest> | undefined, b: GetPointStatesRequest | PlainMessage<GetPointStatesRequest> | undefined): boolean;
}

/**
 * @generated from message state.v1.GetPointStatesResponse
 */
export declare class GetPointStatesResponse extends Message<GetPointStatesResponse> {
  /**
   * @generated from field: repeated state.v1.PointAndState states = 1;
   */
  states: PointAndState[];

  constructor(data?: PartialMessage<GetPointStatesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "state.v1.GetPointStatesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPointStatesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPointStatesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPointStatesResponse;

  static equals(a: GetPointStatesResponse | PlainMessage<GetPointStatesResponse> | undefined, b: GetPointStatesResponse | PlainMessage<GetPointStatesResponse> | undefined): boolean;
}

