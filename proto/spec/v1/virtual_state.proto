// 仮想レイヤの状態

syntax = "proto3";

option go_package = "pkg/grpc";

package state_sync.v1;

service StateManagerService {
  rpc GetState(GetStateRequest) returns (GetStateResponse) {}
}

enum Priority {
  PRIORITY_UNSPECIFIED = 0;
  PRIORITY_LOW = 1;
  PRIORITY_HIGH = 2;
}

message Node {
  string id = 1;
};

message Edge {
  string id = 1;
}

message Train {
  // 列車の位置
  oneof position {
    Node node = 1;
    Edge edge = 2;
  }
  // Path
  repeated Node path = 3;
  // 列車の優先度
  Priority priority = 4;
}

message TrainState {
  repeated Train trains = 1;
}

message BlockStateNode {
  // nodes
  repeated Node nodes = 1;
}

// 閉塞の状態
message BlockState {
  repeated BlockStateNode nodes = 1;
}

message VirualState {
  // 閉塞の状態
  BlockState block_state = 1;
  // 列車の状態
  TrainState train_state = 2;
}

message GetStateRequest {
  // リクエストID
  string request_id = 1;
}

message GetStateResponse {
  // リクエストID
  string request_id = 1;
  // 状態
  VirualState state = 2;
}

enum PointStateEnum {
  POINTSTATE_UNKNOWN = 0;
  POINTSTATE_ON = 1;
  POINTSTATE_OFF = 2;
}